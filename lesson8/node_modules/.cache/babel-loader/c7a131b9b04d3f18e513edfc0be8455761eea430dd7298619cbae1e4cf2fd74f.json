{"ast":null,"code":"var _jsxFileName = \"/home/lera/\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B/reps/React/lesson8/src/App.js\",\n  _s = $RefreshSig$();\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n{\n  /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(SagaComponent, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 4,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 3,\n    columnNumber: 5\n  }, this);\n}\nexport default App;\nexport const useRequest = request => {\n  _s();\n  const [data, setData] = useState([]);\n  const [loading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const loadData = async () => {\n      setIsLoading(true);\n      try {\n        let response = await fetch(request);\n        let data = await response.json();\n        setData(data);\n      } catch (e) {\n        setError(e);\n      } finally {}\n    };\n  });\n};\n_s(useRequest, \"21v2xXHPko4Cqd+97GPe7UeI9o0=\");","map":{"version":3,"names":["_jsxDEV","children","SagaComponent","fileName","_jsxFileName","lineNumber","columnNumber","App","useRequest","request","_s","data","setData","useState","loading","setIsLoading","error","setError","useEffect","loadData","response","fetch","json","e"],"sources":["/home/lera/Документы/reps/React/lesson8/src/App.js"],"sourcesContent":["{\n  (\n    <div>\n      <SagaComponent>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n      </SagaComponent>\n    </div>\n  );\n}\n\nexport default App;\n\n\nexport const useRequest = (request) => {\n  const [data, setData] = useState([]);\n  const [loading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const loadData = async() => {\n      setIsLoading(true);\n      try {\n        let response = await fetch(request);\n        let data = await response.json();\n        setData(data);\n      } catch (e) {\n        setError(e);\n      } finally {\n        \n      }\n    }\n  })\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"],"mappings":";;;AAAA;EACE,aACEA,OAAA;IAAAC,QAAA,eACED,OAAA,CAACE,aAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OA0FC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACb,CAAC;AAEV;AAEA,eAAeC,GAAG;AAGlB,OAAO,MAAMC,UAAU,GAAIC,OAAO,IAAK;EAAAC,EAAA;EACrC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGC,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACC,OAAO,EAAEC,YAAY,CAAC,GAAGF,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAM,CAACG,KAAK,EAAEC,QAAQ,CAAC,GAAGJ,QAAQ,CAAC,IAAI,CAAC;EAExCK,SAAS,CAAC,MAAM;IACd,MAAMC,QAAQ,GAAG,MAAAA,CAAA,KAAW;MAC1BJ,YAAY,CAAC,IAAI,CAAC;MAClB,IAAI;QACF,IAAIK,QAAQ,GAAG,MAAMC,KAAK,CAACZ,OAAO,CAAC;QACnC,IAAIE,IAAI,GAAG,MAAMS,QAAQ,CAACE,IAAI,CAAC,CAAC;QAChCV,OAAO,CAACD,IAAI,CAAC;MACf,CAAC,CAAC,OAAOY,CAAC,EAAE;QACVN,QAAQ,CAACM,CAAC,CAAC;MACb,CAAC,SAAS,CAEV;IACF,CAAC;EACH,CAAC,CAAC;AACJ,CAAC;AAAAb,EAAA,CAnBYF,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}